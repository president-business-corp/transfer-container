name: Transfer Container Registry

on:
  workflow_dispatch:
    inputs:
      oldImage:
        description: 'Image name to pull docker.pkg.github.com/user/repo/(image)'
        required: true
        default: 'image'
      newImage:
        description: 'Image name to save ghcr.io/account/(image name)'
        required: true
        default: 'new-image'
      oldRegistry:
        description: 'Old registry service. Defaults to docker.pkg.github.com'
        default: 'docker.pkg.github.com'
      newRegistry:
        description: 'New registry service. Defaults to ghcr.io'
        default: 'ghcr.io'

# TODO: Add secrets NEW_REGISTRY_AUTH to your repo secrets
env:
  NEW_REGISTRY_USER: ${{ github.actor }}
  NEW_REGISTRY_AUTH: ${{ secrets.CR_PAT }}
  NEW_REGISTRY: ${INPUT_NEWREGISTRY}
  OLD_REGISTRY: ${INPUT_OLDREGISTRY}
  OLD_REGISTRY_USER: ${{ github.actor }}
  OLD_REGISTRY_AUTH: ${{ github.token }}

jobs:

  transfer:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/github-script@v3
        id: v1s
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            const query = `query($owner:String!, $name:String!) {
              repository(owner:$owner, name:$name){
                packages(first: 100, packageType:DOCKER) {
                  nodes {
                    name
                    versions(first: 100) {
                      nodes {
                        version
                      }
                    }
                  }
                }
              }
            }`;
            const variables = {
              owner: context.repo.owner,
              name: context.repo.repo
            }
            const result = await github.graphql(query, variables)
            if (!result) {
              core.setFailed('GraphQL request failed')
            } else {
              return result
            }
      - name: Echo all Packages
        run: echo "${{fromJSON(steps.v1s.outputs.result)}}"
      - uses: docker/login-action@v1
        with:
          username: ${{ env.OLD_REGISTRY_USER }}
          password: ${{ env.OLD_REGISTRY_AUTH }}
          registry: ${{ env.OLD_REGISTRY }}

      - uses: docker/login-action@v1
        with:
          username: ${{ env.NEW_REGISTRY_USER }}
          password: ${{ env.NEW_REGISTRY_AUTH }}
          registry: ${{ env.NEW_REGISTRY }}

      - run: |
          for TAG in latest
          do
            docker pull $OLD_REGISTRY/${{ github.event.inputs.oldImage }}:${TAG}
          done

      - run: |
          for TAG in latest
          do
            docker tag ${OLD_REGISTRY}/${{ github.repository }}/${{ github.event.inputs.oldImage }}:${TAG} \
                       ${NEW_REGISTRY}/${{ github.repository_owner }}/${{ github.event.inputs.newImage }}:${TAG}
          done

      - run: |
          for TAG in latest
          do
            docker push ${NEW_REGISTRY}/${{ github.repository_owner }}/${{ github.event.inputs.newImage }}:${TAG}
          done
